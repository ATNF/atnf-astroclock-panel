{"version":3,"sources":["../src/clock_ctrl.js"],"names":["getJulianDate","today","Date","getTime","getGST","clock","status","JD","JD0","S","T","T0","UT","A","GST","Math","floor","getUTCMilliseconds","getUTCSeconds","getUTCMinutes","getUTCHours","zeropad","str","padStart","getLST","lon","d","h","trunc","m","s","PanelCtrl","moment","panelDefaults","titleFontSize","clockFontSize","padding","fontWeight","bgColor","longitude","clocks","ClockCtrl","$scope","$injector","_","defaults","panel","events","on","onInitEditMode","bind","onPanelTeardown","timezones","concat","tz","names","time","title","render","toString","addEditorTab","$timeout","cancel","nextTickPromise","scale","elem","rect","getBoundingClientRect","width","i","length","format","scope","find","$panelContainer","css","templateUrl"],"mappings":"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","file":"clock_ctrl.js","sourcesContent":["import {PanelCtrl} from 'app/plugins/sdk';\nimport moment from './lib/moment-timezone-with-data.min';\n//import astrojs from './lib/astro.js';\nimport './css/clock-panel.css!';\n\nconst panelDefaults = {\n    titleFontSize: 20,\n    clockFontSize: 28,\n    padding: 15,\n    fontWeight: 'normal',\n    bgColor: null,\n    longitude: 116.632311,\n    clocks : [[\"UTC\", \"UTC\"], [\"LST\", \"Local Sidereal Time\"], [\"Browser\", \"\"], [\"MRO\", \"Australia/Perth\"]]\n};\n\n// Return the full Julian Date\n// It is important to remember to include the timezone \n// offset if setting this with a string\nfunction getJulianDate(today) {\n    // The Julian Date of the Unix Time epoch is 2440587.5\n    if(!today) today = new Date();\n    if(typeof today===\"string\") today = new Date(today);\n    return ( ((typeof today===\"number\") ? today : today.getTime()) / 86400000.0 ) + 2440587.5;\n}\n\n// Return the Greenwich Sidereal Time\nfunction getGST(clock){\n    if(typeof clock===\"undefined\") return { status: -1 };\n    if(typeof clock===\"string\") clock = new Date(clock);\n    else if(typeof clock===\"number\") clock = new Date(clock);\n    var JD, JD0, S, T, T0, UT, A, GST;\n    JD = getJulianDate(clock);\n    JD0 = Math.floor(JD-0.5)+0.5;\n    S = JD0-2451545.0;\n    T = S/36525.0;\n    T0 = (6.697374558 + (2400.051336*T) + (0.000025862*T*T))%24;\n    if(T0 < 0) T0 += 24;\n    UT = (((clock.getUTCMilliseconds()/1000 + clock.getUTCSeconds())/60) + clock.getUTCMinutes())/60 + clock.getUTCHours();\n    A = UT*1.002737909;\n    T0 += A;\n    GST = T0%24;\n    if(GST < 0) GST += 24;\n    return GST;\n}\n\nfunction zeropad(str) {\n    return (str + '').padStart(2, \"0\");\n}\n\nfunction getLST(lon){\n    var clock = new Date();\n    var GST = getGST(clock);\n    var d = (GST + lon/15.0)/24.0;\n    d = d - Math.floor(d);\n    if(d < 0) d += 1;\n    d *= 24;\n    var h = Math.trunc(d);\n    d -= h;\n    var m = Math.trunc(60 * d);\n    d -= m / 60;\n    var s = Math.trunc(3600 * d);\n    return zeropad(h) + ':' + zeropad(m) + ':' + zeropad(s);\n}\n\n\nexport class ClockCtrl extends PanelCtrl {\n\n    constructor($scope, $injector) {\n        super($scope, $injector);\n        _.defaults(this.panel, panelDefaults);\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n        this.timezones = [\"Local Sidereal Time\"].concat(moment.tz.names());\n        this.time = []; \n        this.title = [];\n        this.render();\n        this.titleFontSize = this.panel.titleFontSize.toString() + \"px\";\n        this.clockFontSize = this.panel.clockFontSize.toString() + \"px\";\n        this.padding = this.panel.padding.toString() + \"px\";\n        // this.tz = moment.tz.guess();\n             \n        // astrojs.importPackages(['dates']);\n        // astrojs.ready(function(e) {\n        // });\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/atnf-astroclock-panel/editor.html', 2);\n    }\n    \n    onPanelTeardown() {\n        this.$timeout.cancel(this.nextTickPromise);\n    }\n    \n    render() {\n        var scale = 1.0;\n        if (this.elem != null) {\n            var rect = this.elem.getBoundingClientRect();\n            if (rect.width < 415) {\n                scale = 0.4;\n            }\n            else if (rect.width < 640) {\n                scale = 0.6;\n            }\n            this.titleFontSize = Math.floor(this.panel.titleFontSize * scale).toString() + \"px\";\n            this.clockFontSize = Math.floor(this.panel.clockFontSize * scale).toString() + \"px\";\n            this.padding = this.panel.padding.toString() + \"px\";\n            for (var i = 0; i < this.panel.clocks.length; i++) {\n                this.title[i] = this.panel.clocks[i][0];\n                if (this.panel.clocks[i][1] == \"Local Sidereal Time\") {\n                    this.time[i] = getLST(this.panel.longitude);\n                }\n                else if (this.panel.clocks[i][1] == \"\") {\n                    // moment.tz.guess() not a function??\n                    this.time[i] = moment().format('HH:mm:ss z');\n                }\n                else {\n                    this.time[i] = moment().tz(this.panel.clocks[i][1]).format('HH:mm:ss z');\n                }\n            }\n        }\n        this.$timeout(() => { this.render(); }, 1000);\n    }\n\n    link(scope, elem) {\n        this.elem = elem.find('.clock-panel')[0];\n        this.events.on('render', () => {\n            const $panelContainer = elem.find('.panel-container');\n            if (this.panel.bgColor) {\n                $panelContainer.css('background-color', this.panel.bgColor);\n            } else {\n                $panelContainer.css('background-color', '');\n            }\n        });\n    }\n}\n\nClockCtrl.templateUrl = 'module.html';\n"]}